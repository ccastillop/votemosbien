# Name of your application. Used to uniquely configure containers.
service: votemosbien 

# Name of the container image.
image: ccastillop/votemosbien

# Deploy to these servers.
servers:
  web:
    hosts:
      - 192.168.0.10
    options:
      "add-host": host.docker.internal:host-gateway
    labels:
      traefik.http.routers.veci.rule: Host(`votemosbien.softwarebajodemanda.com`)
  jobs:
    hosts:
      - 192.168.0.10
    options:
      "add-host": host.docker.internal:host-gateway
    cmd: bundle exec backburner -q default:2,mailers:1

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  server: ghcr.io
  username: ccastillop

  # Always use an access token rather than real password when possible.
  password:
    - KAMAL_REGISTRY_PASSWORD

# Inject ENV variables into containers (secrets come from .env).
env:
  secret:
    - RAILS_MASTER_KEY
  clear:
    RAILS_SERVE_STATIC_FILES: true
    REDIS_URL: redis://host.docker.internal:6379/1
    RAILS_LOG_LEVEL: info
    BEANSTALK_URL: beanstalk://host.docker.internal:11300
#   clear:
#     DB_HOST: 192.168.0.2

# Use a different ssh user than root
# ssh:
#   user: ccastillo

# Configure builder setup.
# builder:
#   args:
#     RUBY_VERSION: 3.2.0
#   secrets:
#     - GITHUB_TOKEN
#   remote:
#     arch: amd64
#     host: ssh://app@192.168.0.1
builder:
  remote:
    arch: arm64
    host: ssh://root@192.168.0.10

# Use accessory services (secrets come from .env).
# accessories:
#   db:
#     image: mysql:8.0
#     host: 192.168.0.2
#     port: 3306
#     env:
#       clear:
#         MYSQL_ROOT_HOST: '%'
#       secret:
#         - MYSQL_ROOT_PASSWORD
#     files:
#       - config/mysql/production.cnf:/etc/mysql/my.cnf
#       - db/production.sql.erb:/docker-entrypoint-initdb.d/setup.sql
#     directories:
#       - data:/var/lib/mysql
#   redis:
#     image: redis:7.0
#     host: 192.168.0.2
#     port: 6379
#     directories:
#       - data:/data

# Configure custom arguments for Traefik
# traefik:
#   args:
#     accesslog: true
#     accesslog.format: json
traefik:
  host_port: 8080
# Configure a custom healthcheck (default is /up on port 3000)
# healthcheck:
#   port: 3001

asset_path: /rails/public/assets

volumes:
  - "storage_votemosbien:/rails/storage/"

